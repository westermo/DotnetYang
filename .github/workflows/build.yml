name: Build and Test
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: sh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - name: Restore
        run: dotnet restore yang-compiler.sln
      - name: Build
        run: dotnet build yang-compiler.sln --no-restore
      - name: Test
        run: dotnet test yang-compiler.sln --no-build --no-restore
        
  pack-test:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - name: Pack Generator
        run: dotnet pack dotnetYang/dotnetYang.csproj -o "${{ env.NuGetDirectory }}" --property:RepositoryCommit="${{ env.COMMIT_SHA }}" --property:InformationalVersion="0.0.0" --property:AssemblyVersion="0.0.0" --property:FileVersion="0.0.0" --property:Version="0.0.0"
      - uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          if-no-files-found: error
          retention-days: 1
          path: ${{ env.NuGetDirectory }}/*.nupkg

  pack-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - name: Pack Generator
        run: dotnet pack dotnetYang/dotnetYang.csproj -o "${{ env.NuGetDirectory }}" --property:RepositoryCommit="${{ env.COMMIT_SHA }}" --property:InformationalVersion="${{ github.ref_name }}" --property:AssemblyVersion="${{ github.ref_name }}" --property:FileVersion="${{ github.ref_name }}" --property:Version="${{ github.ref_name }}"
      - uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          if-no-files-found: error
          retention-days: 1
          path: ${{ env.NuGetDirectory }}/*.nupkg

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ pack-release ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ${{ env.NuGetDirectory }}
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - name: Publish Nuget packages
        run: |
          for file in $(find "${{ env.NuGetDirectory }}" -type f -name "*.nupkg"); do
            dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json
          done